{
  "address": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
  "receipt": {
    "to": null,
    "from": "0xd0AEF8b960d43418DC0A83DD0cAc04A3793De3E0",
    "contractAddress": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
    "transactionIndex": 1,
    "gasUsed": "1120361",
    "logsBloom": "0x0000000010000000000000010000010100048000000040000000000000000080000800100400000000001000020000000020000000000080000000000000000000000040020010000082400800400000080000000106000000000000000000000000000002000000004000100000080000000000000000000220001042010800000000011000000000000002000000040080000000000140000000020c000000000000000800000020000000020000000000002000000000020000000020000002000002000000004000000000080000000000800200800000000000000020000000008000040000000000000000000000800080000001000000000000000800",
    "blockHash": "0x84b9959812ea2b229322a66d85c847c907e8a23591426f0cc29a29c89b259170",
    "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 11284538,
        "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
        "address": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000d0aef8b960d43418dc0a83dd0cac04a3793de3e0"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000e8d4a51000",
        "logIndex": 2,
        "blockHash": "0x84b9959812ea2b229322a66d85c847c907e8a23591426f0cc29a29c89b259170"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 11284538,
        "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
        "address": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000e1be08ea148e353a5a3ed776d3aba66cbe65a6b2"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000e8d4a51000",
        "logIndex": 3,
        "blockHash": "0x84b9959812ea2b229322a66d85c847c907e8a23591426f0cc29a29c89b259170"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 11284538,
        "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
        "address": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000987d5289c4082e800c388144c73bb34bd77e51c8"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000e8d4a51000",
        "logIndex": 4,
        "blockHash": "0x84b9959812ea2b229322a66d85c847c907e8a23591426f0cc29a29c89b259170"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 11284538,
        "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
        "address": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000071a4f9a84491eea9deee4d6807c8fc51bf70821a"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000e8d4a51000",
        "logIndex": 5,
        "blockHash": "0x84b9959812ea2b229322a66d85c847c907e8a23591426f0cc29a29c89b259170"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 11284538,
        "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
        "address": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000a44dc3bd5a9e745c55e152fb0841492f1f868f03"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000e8d4a51000",
        "logIndex": 6,
        "blockHash": "0x84b9959812ea2b229322a66d85c847c907e8a23591426f0cc29a29c89b259170"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 11284538,
        "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
        "address": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000ec3cdda313c6046c18813ad3b377c6be72709ac6"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000e8d4a51000",
        "logIndex": 7,
        "blockHash": "0x84b9959812ea2b229322a66d85c847c907e8a23591426f0cc29a29c89b259170"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 11284538,
        "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
        "address": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000fd047d1e748da26f560e94d616eb9f4f1c53023d"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000e8d4a51000",
        "logIndex": 8,
        "blockHash": "0x84b9959812ea2b229322a66d85c847c907e8a23591426f0cc29a29c89b259170"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 11284538,
        "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
        "address": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000e13a436a9e78e81768bfd42149d8ba8e2e8fa79c"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000e8d4a51000",
        "logIndex": 9,
        "blockHash": "0x84b9959812ea2b229322a66d85c847c907e8a23591426f0cc29a29c89b259170"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 11284538,
        "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
        "address": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b3c30436292368b06ce6b595cf993d2f97424fe1"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000e8d4a51000",
        "logIndex": 10,
        "blockHash": "0x84b9959812ea2b229322a66d85c847c907e8a23591426f0cc29a29c89b259170"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 11284538,
        "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
        "address": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000867cf8a412ab0c9822023328388e25826a614b7b"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000e8d4a51000",
        "logIndex": 11,
        "blockHash": "0x84b9959812ea2b229322a66d85c847c907e8a23591426f0cc29a29c89b259170"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 11284538,
        "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
        "address": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b733050f8dc7f1453de24a6108f51999078c05dc"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000e8d4a51000",
        "logIndex": 12,
        "blockHash": "0x84b9959812ea2b229322a66d85c847c907e8a23591426f0cc29a29c89b259170"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 11284538,
        "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
        "address": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000081d2c93b6432bfe88231df54ad3f9f1ffcc8129b"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000e8d4a51000",
        "logIndex": 13,
        "blockHash": "0x84b9959812ea2b229322a66d85c847c907e8a23591426f0cc29a29c89b259170"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 11284538,
        "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
        "address": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000004de2f97317d78d65c7ffa352d6ec613e7fecbdb7"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000e8d4a51000",
        "logIndex": 14,
        "blockHash": "0x84b9959812ea2b229322a66d85c847c907e8a23591426f0cc29a29c89b259170"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 11284538,
        "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
        "address": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001b0b360e969d1ce34d93bcce530b88ede32d3924"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000e8d4a51000",
        "logIndex": 15,
        "blockHash": "0x84b9959812ea2b229322a66d85c847c907e8a23591426f0cc29a29c89b259170"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 11284538,
        "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
        "address": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008c2a5cf35e679ec5f3fe11d12ead9a92061f98c3"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000e8d4a51000",
        "logIndex": 16,
        "blockHash": "0x84b9959812ea2b229322a66d85c847c907e8a23591426f0cc29a29c89b259170"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 11284538,
        "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
        "address": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b0dcbc075c1199e04b2ec9f7b9803540ed1322e5"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000e8d4a51000",
        "logIndex": 17,
        "blockHash": "0x84b9959812ea2b229322a66d85c847c907e8a23591426f0cc29a29c89b259170"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 11284538,
        "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
        "address": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000031f8f992439c90644af0ce4b4b405e223ae4f315"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000e8d4a51000",
        "logIndex": 18,
        "blockHash": "0x84b9959812ea2b229322a66d85c847c907e8a23591426f0cc29a29c89b259170"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 11284538,
        "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
        "address": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000572876cee31ceb7b0b9d3f709691837b3a949812"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000e8d4a51000",
        "logIndex": 19,
        "blockHash": "0x84b9959812ea2b229322a66d85c847c907e8a23591426f0cc29a29c89b259170"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 11284538,
        "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
        "address": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000fc47ba37646fc39f1ba8e9e86ce909632e4fd1e3"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000e8d4a51000",
        "logIndex": 20,
        "blockHash": "0x84b9959812ea2b229322a66d85c847c907e8a23591426f0cc29a29c89b259170"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 11284538,
        "transactionHash": "0x282c84fe194cdf0d6bb6b688194e62e3463ba36c16005d0e81e0f56ce087a46b",
        "address": "0xE5355bd4f87Fb825A79E712D93d171f60Ef0C3e0",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000317945f88a760ac43cda06cd2ff32aa602dc462a"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000e8d4a51000",
        "logIndex": 21,
        "blockHash": "0x84b9959812ea2b229322a66d85c847c907e8a23591426f0cc29a29c89b259170"
      }
    ],
    "blockNumber": 11284538,
    "cumulativeGasUsed": "1171870",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "1000000000000",
    [
      "0xd0AEF8b960d43418DC0A83DD0cAc04A3793De3E0",
      "0xE1Be08eA148e353a5A3ED776d3aBa66cBE65a6b2",
      "0x987d5289C4082e800c388144c73bb34BD77E51c8",
      "0x71a4f9A84491eea9dEee4d6807c8FC51bF70821a",
      "0xa44dc3bD5a9E745c55e152fB0841492F1F868F03",
      "0xec3cdDA313c6046C18813Ad3b377C6bE72709AC6",
      "0xfD047d1E748da26F560E94d616eb9F4F1c53023D",
      "0xe13a436A9E78E81768BFD42149d8ba8e2e8fA79C",
      "0xb3c30436292368b06Ce6b595cF993D2f97424Fe1",
      "0x867cf8a412ab0C9822023328388e25826a614b7B",
      "0xb733050f8dC7f1453de24A6108f51999078c05dC",
      "0x81d2c93B6432bFE88231Df54aD3f9f1FFcC8129B",
      "0x4dE2F97317D78D65C7fFa352D6ec613E7feCBDb7",
      "0x1B0b360e969D1cE34D93BcCe530B88ede32D3924",
      "0x8c2a5CF35E679Ec5F3FE11D12eaD9a92061f98c3",
      "0xb0DCBc075C1199e04b2EC9F7b9803540ED1322E5",
      "0x31F8f992439C90644AF0ce4b4B405e223aE4F315",
      "0x572876CeE31cEB7b0B9d3f709691837B3A949812",
      "0xfc47bA37646Fc39F1BA8e9e86cE909632E4fd1E3",
      "0x317945f88A760Ac43CDA06CD2fF32AA602dc462A"
    ]
  ],
  "solcInputHash": "ddc033021a0f1a105822438f6ce8e8d1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/USDT.sol\":\"USDT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"src/test/USDT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\n\\ncontract USDT is ERC20 {\\n  constructor(uint256 mintAmount, address[] memory accounts) ERC20('USDT', 'USDT') {\\n    for (uint256 i = 0; i < accounts.length; i++) {\\n      _mint(accounts[i], mintAmount);\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the number of decimals used to get its user representation.\\n   * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n   * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n   *\\n   * Tokens usually opt for a value of 18, imitating the relationship between\\n   * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n   * overridden;\\n   *\\n   * NOTE: This information is only used for _display_ purposes: it in\\n   * no way affects any of the arithmetic of the contract, including\\n   * {IERC20-balanceOf} and {IERC20-transfer}.\\n   */\\n  function decimals() public view virtual override returns (uint8) {\\n    return 6;\\n  }\\n}\\n\",\"keccak256\":\"0xe219c424228a5f4306e016bb04ba0db1400fcbc80f390f52f30dd700e98c7630\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000cdc38038062000cdc83398101604081905262000034916200029c565b6040805180820182526004808252631554d11560e21b6020808401828152855180870190965292855284015281519192916200007391600391620001d9565b50805162000089906004906020840190620001d9565b50505060005b8151811015620000e857620000d3828281518110620000be57634e487b7160e01b600052603260045260246000fd5b602002602001015184620000f160201b60201c565b80620000df81620003d6565b9150506200008f565b50505062000420565b6001600160a01b0382166200014c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200016091906200037e565b90915550506001600160a01b038216600090815260208190526040812080548392906200018f9084906200037e565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001e79062000399565b90600052602060002090601f0160209004810192826200020b576000855562000256565b82601f106200022657805160ff191683800117855562000256565b8280016001018555821562000256579182015b828111156200025657825182559160200191906001019062000239565b506200026492915062000268565b5090565b5b8082111562000264576000815560010162000269565b80516001600160a01b03811681146200029757600080fd5b919050565b60008060408385031215620002af578182fd5b8251602080850151919350906001600160401b0380821115620002d0578384fd5b818601915086601f830112620002e4578384fd5b815181811115620002f957620002f96200040a565b8060051b604051601f19603f830116810181811085821117156200032157620003216200040a565b604052828152858101935084860182860187018b101562000340578788fd5b8795505b838610156200036d5762000358816200027f565b85526001959095019493860193860162000344565b508096505050505050509250929050565b60008219821115620003945762000394620003f4565b500190565b600181811c90821680620003ae57607f821691505b60208210811415620003d057634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415620003ed57620003ed620003f4565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6108ac80620004306000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c806306fdde031461009e578063095ea7b3146100bc57806318160ddd146100df57806323b872dd146100f1578063313ce56714610104578063395093511461011357806370a082311461012657806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d575b600080fd5b6100a66101b6565b6040516100b391906107c4565b60405180910390f35b6100cf6100ca36600461079b565b610248565b60405190151581526020016100b3565b6002545b6040519081526020016100b3565b6100cf6100ff366004610760565b61025e565b604051600681526020016100b3565b6100cf61012136600461079b565b61030d565b6100e361013436600461070d565b6001600160a01b031660009081526020819052604090205490565b6100a6610349565b6100cf61016536600461079b565b610358565b6100cf61017836600461079b565b6103f1565b6100e361018b36600461072e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101c59061083b565b80601f01602080910402602001604051908101604052809291908181526020018280546101f19061083b565b801561023e5780601f106102135761010080835404028352916020019161023e565b820191906000526020600020905b81548152906001019060200180831161022157829003601f168201915b5050505050905090565b60006102553384846103fe565b50600192915050565b600061026b848484610522565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156102f55760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61030285338584036103fe565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610255918590610344908690610817565b6103fe565b6060600480546101c59061083b565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103da5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102ec565b6103e733858584036103fe565b5060019392505050565b6000610255338484610522565b6001600160a01b0383166104605760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102ec565b6001600160a01b0382166104c15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102ec565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105865760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102ec565b6001600160a01b0382166105e85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102ec565b6001600160a01b038316600090815260208190526040902054818110156106605760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102ec565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610697908490610817565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106e391815260200190565b60405180910390a350505050565b80356001600160a01b038116811461070857600080fd5b919050565b60006020828403121561071e578081fd5b610727826106f1565b9392505050565b60008060408385031215610740578081fd5b610749836106f1565b9150610757602084016106f1565b90509250929050565b600080600060608486031215610774578081fd5b61077d846106f1565b925061078b602085016106f1565b9150604084013590509250925092565b600080604083850312156107ad578182fd5b6107b6836106f1565b946020939093013593505050565b6000602080835283518082850152825b818110156107f0578581018301518582016040015282016107d4565b818111156108015783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561083657634e487b7160e01b81526011600452602481fd5b500190565b600181811c9082168061084f57607f821691505b6020821081141561087057634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212200932da87c0ec1a1ebb99a656001d1f1d0d374ecd1ab27c41aebb3e89b4146b1764736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100995760003560e01c806306fdde031461009e578063095ea7b3146100bc57806318160ddd146100df57806323b872dd146100f1578063313ce56714610104578063395093511461011357806370a082311461012657806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d575b600080fd5b6100a66101b6565b6040516100b391906107c4565b60405180910390f35b6100cf6100ca36600461079b565b610248565b60405190151581526020016100b3565b6002545b6040519081526020016100b3565b6100cf6100ff366004610760565b61025e565b604051600681526020016100b3565b6100cf61012136600461079b565b61030d565b6100e361013436600461070d565b6001600160a01b031660009081526020819052604090205490565b6100a6610349565b6100cf61016536600461079b565b610358565b6100cf61017836600461079b565b6103f1565b6100e361018b36600461072e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101c59061083b565b80601f01602080910402602001604051908101604052809291908181526020018280546101f19061083b565b801561023e5780601f106102135761010080835404028352916020019161023e565b820191906000526020600020905b81548152906001019060200180831161022157829003601f168201915b5050505050905090565b60006102553384846103fe565b50600192915050565b600061026b848484610522565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156102f55760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61030285338584036103fe565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610255918590610344908690610817565b6103fe565b6060600480546101c59061083b565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103da5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102ec565b6103e733858584036103fe565b5060019392505050565b6000610255338484610522565b6001600160a01b0383166104605760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102ec565b6001600160a01b0382166104c15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102ec565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105865760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102ec565b6001600160a01b0382166105e85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102ec565b6001600160a01b038316600090815260208190526040902054818110156106605760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102ec565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610697908490610817565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106e391815260200190565b60405180910390a350505050565b80356001600160a01b038116811461070857600080fd5b919050565b60006020828403121561071e578081fd5b610727826106f1565b9392505050565b60008060408385031215610740578081fd5b610749836106f1565b9150610757602084016106f1565b90509250929050565b600080600060608486031215610774578081fd5b61077d846106f1565b925061078b602085016106f1565b9150604084013590509250925092565b600080604083850312156107ad578182fd5b6107b6836106f1565b946020939093013593505050565b6000602080835283518082850152825b818110156107f0578581018301518582016040015282016107d4565b818111156108015783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561083657634e487b7160e01b81526011600452602481fd5b500190565b600181811c9082168061084f57607f821691505b6020821081141561087057634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212200932da87c0ec1a1ebb99a656001d1f1d0d374ecd1ab27c41aebb3e89b4146b1764736f6c63430008040033",
  "libraries": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1302,
        "contract": "src/test/USDT.sol:USDT",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1308,
        "contract": "src/test/USDT.sol:USDT",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 1310,
        "contract": "src/test/USDT.sol:USDT",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1312,
        "contract": "src/test/USDT.sol:USDT",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 1314,
        "contract": "src/test/USDT.sol:USDT",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}